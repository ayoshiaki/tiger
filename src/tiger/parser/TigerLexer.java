// Generated from Tiger.g by ANTLR 4.4

package tiger.parser;
import tiger.symbol.*;
import tiger.absyn.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class TigerLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		COMMENT=1, COMMENT_SL=2, STRING=3, ARRAY=4, BREAK=5, FUNCTION=6, ELSE=7, 
		DO=8, OF=9, NIL=10, TYPE=11, FOR=12, TO=13, IN=14, END=15, FLOAT=16, DOT=17, 
		IF=18, WHILE=19, VAR=20, LET=21, THEN=22, INT=23, COMMA=24, GT=25, DIVIDE=26, 
		COLON=27, SEMICOLON=28, OR=29, GE=30, LT=31, MINUS=32, TIMES=33, LE=34, 
		ASSIGN=35, LPAREN=36, RPAREN=37, LBRACK=38, RBRACK=39, NEQ=40, AND=41, 
		PLUS=42, LBRACE=43, RBRACE=44, EQ=45, WS=46, ID=47;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'"
	};
	public static final String[] ruleNames = {
		"COMMENT", "COMMENT_SL", "STRING", "ARRAY", "BREAK", "FUNCTION", "ELSE", 
		"DO", "OF", "NIL", "TYPE", "FOR", "TO", "IN", "END", "FLOAT", "DOT", "IF", 
		"WHILE", "VAR", "LET", "THEN", "INT", "COMMA", "GT", "DIVIDE", "COLON", 
		"SEMICOLON", "OR", "GE", "LT", "MINUS", "TIMES", "LE", "ASSIGN", "LPAREN", 
		"RPAREN", "LBRACK", "RBRACK", "NEQ", "AND", "PLUS", "LBRACE", "RBRACE", 
		"EQ", "WS", "ID"
	};


	Exp tree = null;


	public TigerLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Tiger.g"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\61\u0136\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\3\2\3\2\3\2\3\2\7\2f\n\2\f\2\16\2"+
		"i\13\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\7\3t\n\3\f\3\16\3w\13\3\3\3"+
		"\3\3\3\4\3\4\3\4\3\4\7\4\177\n\4\f\4\16\4\u0082\13\4\3\4\3\4\3\5\3\5\3"+
		"\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7"+
		"\3\7\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3"+
		"\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\17\3\20"+
		"\3\20\3\20\3\20\3\21\3\21\6\21\u00bf\n\21\r\21\16\21\u00c0\3\21\6\21\u00c4"+
		"\n\21\r\21\16\21\u00c5\3\21\3\21\6\21\u00ca\n\21\r\21\16\21\u00cb\5\21"+
		"\u00ce\n\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25"+
		"\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30"+
		"\3\30\7\30\u00eb\n\30\f\30\16\30\u00ee\13\30\5\30\u00f0\n\30\3\31\3\31"+
		"\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\37\3\37\3\37\3 \3"+
		" \3!\3!\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3)\3"+
		"*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\6/\u0123\n/\r/\16/\u0124\3/\3/\3\60\3"+
		"\60\7\60\u012b\n\60\f\60\16\60\u012e\13\60\3\60\3\60\3\60\3\60\3\60\5"+
		"\60\u0135\n\60\3g\2\61\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27"+
		"\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61\3\2\7\4"+
		"\2\f\f\17\17\5\2\f\f\17\17$$\5\2\13\f\17\17\"\"\4\2C\\c|\6\2\62;C\\aa"+
		"c|\u0142\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2"+
		"\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\3a\3\2\2\2\5o\3\2\2\2\7z\3\2\2\2\t\u0085\3\2\2\2\13\u008b\3\2\2\2"+
		"\r\u0091\3\2\2\2\17\u009a\3\2\2\2\21\u009f\3\2\2\2\23\u00a2\3\2\2\2\25"+
		"\u00a5\3\2\2\2\27\u00a9\3\2\2\2\31\u00ae\3\2\2\2\33\u00b2\3\2\2\2\35\u00b5"+
		"\3\2\2\2\37\u00b8\3\2\2\2!\u00cd\3\2\2\2#\u00cf\3\2\2\2%\u00d1\3\2\2\2"+
		"\'\u00d4\3\2\2\2)\u00da\3\2\2\2+\u00de\3\2\2\2-\u00e2\3\2\2\2/\u00ef\3"+
		"\2\2\2\61\u00f1\3\2\2\2\63\u00f3\3\2\2\2\65\u00f5\3\2\2\2\67\u00f7\3\2"+
		"\2\29\u00f9\3\2\2\2;\u00fb\3\2\2\2=\u00fd\3\2\2\2?\u0100\3\2\2\2A\u0102"+
		"\3\2\2\2C\u0104\3\2\2\2E\u0106\3\2\2\2G\u0109\3\2\2\2I\u010c\3\2\2\2K"+
		"\u010e\3\2\2\2M\u0110\3\2\2\2O\u0112\3\2\2\2Q\u0114\3\2\2\2S\u0117\3\2"+
		"\2\2U\u0119\3\2\2\2W\u011b\3\2\2\2Y\u011d\3\2\2\2[\u011f\3\2\2\2]\u0122"+
		"\3\2\2\2_\u0134\3\2\2\2ab\7\61\2\2bc\7,\2\2cg\3\2\2\2df\13\2\2\2ed\3\2"+
		"\2\2fi\3\2\2\2gh\3\2\2\2ge\3\2\2\2hj\3\2\2\2ig\3\2\2\2jk\7,\2\2kl\7\61"+
		"\2\2lm\3\2\2\2mn\b\2\2\2n\4\3\2\2\2op\7\61\2\2pq\7\61\2\2qu\3\2\2\2rt"+
		"\n\2\2\2sr\3\2\2\2tw\3\2\2\2us\3\2\2\2uv\3\2\2\2vx\3\2\2\2wu\3\2\2\2x"+
		"y\b\3\2\2y\6\3\2\2\2z\u0080\7$\2\2{|\7^\2\2|\177\7$\2\2}\177\n\3\2\2~"+
		"{\3\2\2\2~}\3\2\2\2\177\u0082\3\2\2\2\u0080~\3\2\2\2\u0080\u0081\3\2\2"+
		"\2\u0081\u0083\3\2\2\2\u0082\u0080\3\2\2\2\u0083\u0084\7$\2\2\u0084\b"+
		"\3\2\2\2\u0085\u0086\7c\2\2\u0086\u0087\7t\2\2\u0087\u0088\7t\2\2\u0088"+
		"\u0089\7c\2\2\u0089\u008a\7{\2\2\u008a\n\3\2\2\2\u008b\u008c\7d\2\2\u008c"+
		"\u008d\7t\2\2\u008d\u008e\7g\2\2\u008e\u008f\7c\2\2\u008f\u0090\7m\2\2"+
		"\u0090\f\3\2\2\2\u0091\u0092\7h\2\2\u0092\u0093\7w\2\2\u0093\u0094\7p"+
		"\2\2\u0094\u0095\7e\2\2\u0095\u0096\7v\2\2\u0096\u0097\7k\2\2\u0097\u0098"+
		"\7q\2\2\u0098\u0099\7p\2\2\u0099\16\3\2\2\2\u009a\u009b\7g\2\2\u009b\u009c"+
		"\7n\2\2\u009c\u009d\7u\2\2\u009d\u009e\7g\2\2\u009e\20\3\2\2\2\u009f\u00a0"+
		"\7f\2\2\u00a0\u00a1\7q\2\2\u00a1\22\3\2\2\2\u00a2\u00a3\7q\2\2\u00a3\u00a4"+
		"\7h\2\2\u00a4\24\3\2\2\2\u00a5\u00a6\7p\2\2\u00a6\u00a7\7k\2\2\u00a7\u00a8"+
		"\7n\2\2\u00a8\26\3\2\2\2\u00a9\u00aa\7v\2\2\u00aa\u00ab\7{\2\2\u00ab\u00ac"+
		"\7r\2\2\u00ac\u00ad\7g\2\2\u00ad\30\3\2\2\2\u00ae\u00af\7h\2\2\u00af\u00b0"+
		"\7q\2\2\u00b0\u00b1\7t\2\2\u00b1\32\3\2\2\2\u00b2\u00b3\7v\2\2\u00b3\u00b4"+
		"\7q\2\2\u00b4\34\3\2\2\2\u00b5\u00b6\7k\2\2\u00b6\u00b7\7p\2\2\u00b7\36"+
		"\3\2\2\2\u00b8\u00b9\7g\2\2\u00b9\u00ba\7p\2\2\u00ba\u00bb\7f\2\2\u00bb"+
		" \3\2\2\2\u00bc\u00be\7\60\2\2\u00bd\u00bf\4\62;\2\u00be\u00bd\3\2\2\2"+
		"\u00bf\u00c0\3\2\2\2\u00c0\u00be\3\2\2\2\u00c0\u00c1\3\2\2\2\u00c1\u00ce"+
		"\3\2\2\2\u00c2\u00c4\4\62;\2\u00c3\u00c2\3\2\2\2\u00c4\u00c5\3\2\2\2\u00c5"+
		"\u00c3\3\2\2\2\u00c5\u00c6\3\2\2\2\u00c6\u00c7\3\2\2\2\u00c7\u00c9\7\60"+
		"\2\2\u00c8\u00ca\4\62;\2\u00c9\u00c8\3\2\2\2\u00ca\u00cb\3\2\2\2\u00cb"+
		"\u00c9\3\2\2\2\u00cb\u00cc\3\2\2\2\u00cc\u00ce\3\2\2\2\u00cd\u00bc\3\2"+
		"\2\2\u00cd\u00c3\3\2\2\2\u00ce\"\3\2\2\2\u00cf\u00d0\7\60\2\2\u00d0$\3"+
		"\2\2\2\u00d1\u00d2\7k\2\2\u00d2\u00d3\7h\2\2\u00d3&\3\2\2\2\u00d4\u00d5"+
		"\7y\2\2\u00d5\u00d6\7j\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7n\2\2\u00d8"+
		"\u00d9\7g\2\2\u00d9(\3\2\2\2\u00da\u00db\7x\2\2\u00db\u00dc\7c\2\2\u00dc"+
		"\u00dd\7t\2\2\u00dd*\3\2\2\2\u00de\u00df\7n\2\2\u00df\u00e0\7g\2\2\u00e0"+
		"\u00e1\7v\2\2\u00e1,\3\2\2\2\u00e2\u00e3\7v\2\2\u00e3\u00e4\7j\2\2\u00e4"+
		"\u00e5\7g\2\2\u00e5\u00e6\7p\2\2\u00e6.\3\2\2\2\u00e7\u00f0\7\62\2\2\u00e8"+
		"\u00ec\4\63;\2\u00e9\u00eb\4\62;\2\u00ea\u00e9\3\2\2\2\u00eb\u00ee\3\2"+
		"\2\2\u00ec\u00ea\3\2\2\2\u00ec\u00ed\3\2\2\2\u00ed\u00f0\3\2\2\2\u00ee"+
		"\u00ec\3\2\2\2\u00ef\u00e7\3\2\2\2\u00ef\u00e8\3\2\2\2\u00f0\60\3\2\2"+
		"\2\u00f1\u00f2\7.\2\2\u00f2\62\3\2\2\2\u00f3\u00f4\7@\2\2\u00f4\64\3\2"+
		"\2\2\u00f5\u00f6\7\61\2\2\u00f6\66\3\2\2\2\u00f7\u00f8\7<\2\2\u00f88\3"+
		"\2\2\2\u00f9\u00fa\7=\2\2\u00fa:\3\2\2\2\u00fb\u00fc\7~\2\2\u00fc<\3\2"+
		"\2\2\u00fd\u00fe\7@\2\2\u00fe\u00ff\7?\2\2\u00ff>\3\2\2\2\u0100\u0101"+
		"\7>\2\2\u0101@\3\2\2\2\u0102\u0103\7/\2\2\u0103B\3\2\2\2\u0104\u0105\7"+
		",\2\2\u0105D\3\2\2\2\u0106\u0107\7>\2\2\u0107\u0108\7?\2\2\u0108F\3\2"+
		"\2\2\u0109\u010a\7<\2\2\u010a\u010b\7?\2\2\u010bH\3\2\2\2\u010c\u010d"+
		"\7*\2\2\u010dJ\3\2\2\2\u010e\u010f\7+\2\2\u010fL\3\2\2\2\u0110\u0111\7"+
		"]\2\2\u0111N\3\2\2\2\u0112\u0113\7_\2\2\u0113P\3\2\2\2\u0114\u0115\7>"+
		"\2\2\u0115\u0116\7@\2\2\u0116R\3\2\2\2\u0117\u0118\7(\2\2\u0118T\3\2\2"+
		"\2\u0119\u011a\7-\2\2\u011aV\3\2\2\2\u011b\u011c\7}\2\2\u011cX\3\2\2\2"+
		"\u011d\u011e\7\177\2\2\u011eZ\3\2\2\2\u011f\u0120\7?\2\2\u0120\\\3\2\2"+
		"\2\u0121\u0123\t\4\2\2\u0122\u0121\3\2\2\2\u0123\u0124\3\2\2\2\u0124\u0122"+
		"\3\2\2\2\u0124\u0125\3\2\2\2\u0125\u0126\3\2\2\2\u0126\u0127\b/\2\2\u0127"+
		"^\3\2\2\2\u0128\u012c\t\5\2\2\u0129\u012b\t\6\2\2\u012a\u0129\3\2\2\2"+
		"\u012b\u012e\3\2\2\2\u012c\u012a\3\2\2\2\u012c\u012d\3\2\2\2\u012d\u0135"+
		"\3\2\2\2\u012e\u012c\3\2\2\2\u012f\u0130\7a\2\2\u0130\u0131\7o\2\2\u0131"+
		"\u0132\7c\2\2\u0132\u0133\7k\2\2\u0133\u0135\7p\2\2\u0134\u0128\3\2\2"+
		"\2\u0134\u012f\3\2\2\2\u0135`\3\2\2\2\20\2gu~\u0080\u00c0\u00c5\u00cb"+
		"\u00cd\u00ec\u00ef\u0124\u012c\u0134\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}